<?xml version="1.0" encoding="utf-8"?>
<ruleMetadata>
    <guid>fcc56a5e-f28a-4b94-8911-2ecada4a0e93</guid>
    <isInternal>false</isInternal>
    <rule>
        <definition>
            <Process>
                <operator type="OR">
                    <condition component="FileItem" property="FileNameWithoutExtension" condition="is" value="powershell" />
                    <condition component="Module" condition="is" property="OriginalFileName" value="powershell.exe" />
                </operator>
            </Process>
            <operations>
                <operation type="Scripts">
                    <operator type="or">
                        <operator type="and">
                            <!-- MS HEADER PARTS -->
                            <condition component="Scripts" property="Script" condition="notcontains" value="$script:ClassName = 'root/Microsoft/Windows/" />
                            <condition component="Scripts" property="Script" condition="notcontains" value="$script:ClassVersion = '" />
                            <condition component="Scripts" property="Script" condition="notcontains" value="$script:ModuleVersion = '" />
                            <condition component="Scripts" property="Script" condition="notcontains" value="$script:ObjectModelWrapper = [Microsoft." />
                            <condition component="Scripts" property="Script" condition="notcontains" value=", Microsoft Corporation. All rights reserved." />
                            <condition component="Scripts" property="Script" condition="notcontains" value="HelpURI = &quot;https://go.microsoft.com/fwlink/" />
                            <condition component="Scripts" property="Script" condition="notcontains" value="# Generated by: Microsoft Corporation" />
                            <condition component="Scripts" property="Script" condition="notcontains" value="Copyright = 'Copyright (c) VMware, Inc. All rights reserved.'" />
                            <condition component="Scripts" property="Script" condition="notcontains" value="# Module manifest for module 'VMware." />
                            <condition component="Scripts" property="Script" condition="notcontains" value="# Copyright (c) Microsoft. All rights reserved." />
                            <condition component="Scripts" property="Script" condition="notcontains" value="# SIG # Begin signature block" />
                            <operator type="or">
                                <condition component="Scripts" property="Script" condition="starts" value="Get-Content " />
                                <condition component="Scripts" property="Script" condition="contains" value=" Get-Content " />
                                <condition component="Scripts" property="Script" condition="contains" value="|Get-Content " />
                                <condition component="Scripts" property="Script" condition="starts" value="Get-ChildItem " />
                                <condition component="Scripts" property="Script" condition="contains" value=" Get-ChildItem " />
                                <condition component="Scripts" property="Script" condition="contains" value="|Get-ChildItem " />
                            </operator>
                            <operator type="or">
                                <condition component="Scripts" property="Script" condition="contains" value="Invoke-Expression " />
                                <condition component="Scripts" property="Script" condition="contains" value="|Invoke-Expression" />
                                <condition component="Scripts" property="Script" condition="contains" value="| Invoke-Expression" />
                                <condition component="Scripts" property="Script" condition="contains" value="|  Invoke-Expression" />
                                <condition component="Scripts" property="Script" condition="contains" value="  Invoke-Expression" />
                                <condition component="Scripts" property="Script" condition="contains" value="Invoke(" />
                                <condition component="Scripts" property="Script" condition="contains" value="InvokeAsync(" />
                            </operator>
                            <condition component="Scripts" property="Script" condition="contains" value="Invoke-RestMethod" />
                            <condition component="Scripts" property="Script" condition="contains" value="webhook.office.com" />
                        </operator>
                    </operator>
                </operation>
                <operation type="ReadFile">
                    <operator type="and">
                        <condition component="FileItem" property="Path" condition="is" value="%APPDATA%\Microsoft\Teams\" />
                        <condition component="FileItem" property="Extension" condition="is" value="log" />
                    </operator>
                </operation>
                <operation type="TcpIpConnect">
                    <operator type="or">
                        <operator type="and">
                            <condition component="Network" property="IpAddressV4" condition="isnot" value="10.0.0.0/8" />
                            <condition component="Network" property="IpAddressV4" condition="isnot" value="172.16.0.0/12" />
                            <condition component="Network" property="IpAddressV4" condition="isnot" value="192.168.0.0/16" />
                            <condition component="Network" property="IpAddressV4" condition="isnot" value="127.0.0.0/8" />
                        </operator>
                        <operator type="and">
                            <condition component="Network" property="IpAddressV6" condition="isnot" value="fc00::/7" />
                            <condition component="Network" property="IpAddressV6" condition="isnot" value="::1/128" />
                        </operator>
                    </operator>
                </operation>
            </operations>
        </definition>
        <maliciousProcess process="current" />
        <actions>
            <action name="MarkAsCompromised" />
            <action name="TriggerDetection" />
            <action name="KillProcess" />
            <action name="StoreEvent" />
        </actions>
        <description>
            <os>Windows</os>
            <name>GIFShell attack - PowerShell stager detected</name>
            <category>Reverse Shell</category>
            <explanation>
            Attackers attempt to run a reverse shell via Teams. A PowerShell script reads commands encoded in GIF images and returns the command output via a Teams Incoming Webhook.
        </explanation>
            <maliciousCauses>
            See https://medium.com/@bobbyrsec/gifshell-covert-attack-chain-and-c2-utilizing-microsoft-teams-gifs-1618c4e64ed7
        </maliciousCauses>
            <benignCauses>
            None.
        </benignCauses>
            <recommendedActions>
            1. Isolate the computer.
2. Contact the affected user to see if they are communicating with an external user via Teams or internally.
        </recommendedActions>
            <severity>95</severity>
        </description>
    </rule>
</ruleMetadata>
